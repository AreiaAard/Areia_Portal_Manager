<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>

<muclient>
<plugin
   name="Areia_Portal_Manager"
   author="Areia"
   id="8e5f000d72c9f11a6debbc6b"
   language="Lua"
   purpose="Streamline use of chaos, limited-use, and other portals"
   save_state="n"
   date_written="2021-05-30 07:00:00"
   requires="5.06"
   version="0.00"
   >
<description trim="y">
<![CDATA[
]]>
</description>

</plugin>

<include name="constants.lua"/>



<aliases>
</aliases>



<triggers>
</triggers>



<script>
<![CDATA[
require "commas"
require "copytable"
require "gmcphelper"
require "tprint"
require "var"
require "wait"
dofile(GetInfo(60) .. "aardwolf_colors.lua")



--------------------------------------------------
-- DB
--------------------------------------------------

DB = {}

function DB.initialize()
    DB.db = nil
end

function DB.open()
    local directory = GetInfo(66)
    local world = DB.sanitize_filename(WorldName())
    local mapperDB = string.format("%s%s.db.fake", directory, world)
    local db, errcode, errmsg = sqlite3.open(mapperDB)
    if not (db and db:isopen()) then
        DB.error_msg("open", errcode, errmsg)
        return false
    end
    DB.db = db
    return true
end

function DB.close()
    if not (DB.db and DB.db:isopen()) then
        return true
    end
    local code = DB.db:close()
    DB.db = nil
    if (code == -1) then
        DB.error_msg("close", code, "Database id not found.")
    elseif (code == -2) then
        DB.error_msg("close", code, "Database not open.")
    end
    return code == sqlite3.OK
end

function DB.query(sql)
    local results = {}
    if (not DB.open()) then
        return results
    end
    for result in DB.db:nrows(sql) do
        table.insert(results, result)
    end
    DB.close()
    return results
end

function DB.exec(sql)
    local changes = 0
    local cmd = sql
    if (type(cmd) == "table") then
        table.insert(cmd, 1, "BEGIN TRANSACTION")
        table.insert(cmd, "COMMIT")
        cmd = table.concat(cmd, ";")
    end
    if (not DB.open()) then
        return changes
    end
    if (DB.check(DB.db:exec(cmd))) then
        changes = DB.db:changes()
    end
    DB.close()
    return changes
end

function DB.check(code)
    if (code == sqlite3.OK or code == sqlite3.ROW or code == sqlite3.DONE) then
        return true
    end
    local errmsg = DB.db:errmsg()
    DB.db:exec("ROLLBACK")
    DB.error_msg("modify", code, errmsg)
    return false
end

function DB.error_msg(action, code, msg)
    Utility.plugin_msg(string.format(
        "@RError@w. Failed to %s the mapper database (code %s).", action, code
    ), msg)
end

function DB.fixsql(sql)
    if (type(sql) == "boolean") then
        return sql and 1 or 0
    end
    if (not sql) then
        return "NULL"
    end
    return string.format("'%s'", string.gsub(sql, "'", "''"))
end

function DB.sanitize_filename(filename)
    return trim(string.gsub(filename, "[^%w%s()_-]", ""))
end
]]>
</script>



<script>
<![CDATA[
--------------------------------------------------
-- Utility
--------------------------------------------------

Utility = {}

function Utility.initialize()
    local initializers = {
        DB.initialize,
    }
    for _, initializer in ipairs(initializers) do
        initializer()
    end
end

function Utility.deinitialize()
end

function Utility.print(str)
    -- Lets us use Aard color codes in our ColourNotes
    AnsiNote(stylesToANSI(ColoursToStyles(string.format("@w%s@w", str))))
end

function Utility.plugin_msg(str, ...)
    Utility.print(string.format("[@YPortal_Manager@w]: %s", str))
    for _, msg in ipairs{...} do
        Utility.second_msg(msg)
    end
end

function Utility.second_msg(str)
    Utility.print(string.format("                  %s", str))
end

function Utility.display_greeting()
end

function Utility.starts_with(s, t)
    if not (type(s) == "string" and type(t) == "string") then
        return false
    end
    return s:sub(1, #t) == t
end
]]>
</script>



<script>
<![CDATA[
--------------------------------------------------
-- Plugin Callbacks
--------------------------------------------------

function OnPluginInstall()
    Utility.initialize()
    Utility.display_greeting()
end

function OnPluginEnable()
    OnPluginInstall()
end

function OnPluginClose()
    Utility.deinitialize()
end

function OnPluginDisable()
    OnPluginClose()
end

function OnPluginBroadcast(msg, id, name, text)
    if (id == "3e7dedbe37e44942dd46d264") then
    end
end
]]>
</script>


</muclient>
